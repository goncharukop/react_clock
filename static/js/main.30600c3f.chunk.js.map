{"version":3,"sources":["functions/currentDate.js","components/Clock.jsx","functions/randomNumber.js","App.js","index.js"],"names":["getCurrentDate","Date","toLocaleTimeString","Clock","state","date","this","timerId","setInterval","dateNow","console","log","setState","clearInterval","number","props","React","Component","randomNumber","Math","floor","random","App","clockNumber","isClockVisible","changeName","newNumber","toggleClockVisible","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"kLAAaA,EAAiB,WAG5B,OAFa,IAAIC,MAELC,sBCEDC,EAAb,4MACEC,MAAQ,CACNC,KAAML,KAFV,kEAKuB,IAAD,OAClBM,KAAKC,QAAUC,aAAY,WACzB,IAAMC,EAAUT,IAGhBU,QAAQC,IAAIF,GAEZ,EAAKG,SAAS,CAAEP,KAAMI,MACrB,OAbP,6CAiBII,cAAcP,KAAKC,WAjBvB,+BAoBY,IACAO,EAAWR,KAAKS,MAAhBD,OACAT,EAASC,KAAKF,MAAdC,KAER,OACE,iCACE,wDAAqBS,IACrB,mDAAqBT,SA3B7B,GAA2BW,IAAMC,WCLpBC,EAAe,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,WCoDnCC,E,4MA/CblB,MAAQ,CACNmB,YAAa,EACbC,gBAAgB,G,EAGlBC,WAAa,WACX,IAAMC,EAAYR,IAGlBR,QAAQC,IAAR,qCACgC,EAAKP,MAAMmB,YAD3C,eAC6DG,IAG7D,EAAKd,SAAS,CAAEW,YAAaG,K,EAG/BC,mBAAqB,WACnB,EAAKf,UAAS,kBAAyB,CACrCY,gBADY,EAAGA,oB,uDAKT,IAAD,EACiClB,KAAKF,MAArCmB,EADD,EACCA,YAAaC,EADd,EACcA,eAErB,OACE,6BACGA,GAAkB,kBAAC,EAAD,CAAOV,OAAQS,IAElC,4BACEK,KAAK,SACLC,QAASvB,KAAKmB,YAFhB,eAOA,4BACEG,KAAK,SACLC,QAASvB,KAAKqB,oBAEbH,EAAiB,aAAe,mB,GAzCzBR,IAAMC,WCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.30600c3f.chunk.js","sourcesContent":["export const getCurrentDate = () => {\n  const date = new Date();\n\n  return date.toLocaleTimeString();\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport { getCurrentDate } from '../functions/currentDate';\n\nexport class Clock extends React.Component {\n  state = {\n    date: getCurrentDate(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const dateNow = getCurrentDate();\n\n      // eslint-disable-next-line no-console\n      console.log(dateNow);\n\n      this.setState({ date: dateNow });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { number } = this.props;\n    const { date } = this.state;\n\n    return (\n      <section>\n        <h1>{`React clock â„–${number}`}</h1>\n        <p>{`Current time: ${date}`}</p>\n      </section>\n    );\n  }\n}\n\nClock.propTypes = {\n  number: propTypes.number.isRequired,\n};\n","export const randomNumber = () => Math.floor(Math.random() * 1000);\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport { randomNumber } from './functions/randomNumber';\n\nclass App extends React.Component {\n  state = {\n    clockNumber: 1,\n    isClockVisible: true,\n  }\n\n  changeName = () => {\n    const newNumber = randomNumber();\n\n    // eslint-disable-next-line no-console\n    console.log(\n      `The Clock was renamed from ${this.state.clockNumber} to ${newNumber}`,\n    );\n\n    this.setState({ clockNumber: newNumber });\n  }\n\n  toggleClockVisible = () => {\n    this.setState(({ isClockVisible }) => ({\n      isClockVisible: !isClockVisible,\n    }));\n  }\n\n  render() {\n    const { clockNumber, isClockVisible } = this.state;\n\n    return (\n      <div>\n        {isClockVisible && <Clock number={clockNumber} />}\n\n        <button\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change name\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.toggleClockVisible}\n        >\n          {isClockVisible ? 'Hide Clock' : 'Show Clock'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}